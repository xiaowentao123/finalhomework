import React, { memo, useMemo } from 'react';
import { forwardRef } from 'react';
export const TabPanels = (StyledTabPanels) => memo(forwardRef(({ children, ...props }, ref) => {
    let tabIndex = 0;
    const modiefiedTabPanels = useMemo(() => React.Children.toArray(children).map((child) => {
        return React.cloneElement(child, {
            key: child.key ?? `tabpanel-${tabIndex}`,
            value: `tab-${tabIndex++}`,
            ...child?.props,
        });
    }), 
    // eslint-disable-next-line react-hooks/exhaustive-deps
    [children]);
    return (<StyledTabPanels {...props} ref={ref}>
          {modiefiedTabPanels}
        </StyledTabPanels>);
}));
